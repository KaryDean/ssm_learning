<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.kearmy.dao.IUserDao">    <resultMap id="userMap" type="com.kearmy.domain.User">        <!--设置主键映射-->        <id property="userId" column="id"></id>        <!--设置其他属性映射-->        <result property="userName" column="username"/>        <result property="userAddress" column="address"/>        <result property="userSex" column="sex"/>        <result property="userBirthday" column="birthday"/>    </resultMap>    <!--查询用户-->    <select id="findAll" resultMap="userMap">        select * from user;    </select>    <!--根据用户id查询-->    <select id="findById" parameterType="Integer" resultMap="userMap">        select * from user where id=#{userId}    </select>    <!--根据用户名模糊查询所有用户，需要使用模糊查询关键词like-->    <select id="findByUsername" parameterType="String" resultMap="userMap">        <!--该句使用prepareStatement准备SQL语句，可以防止注入攻击-->        <!--select * from user where username like #{username}-->        <!--该句使用Statement准备SQL语句，直接拼接SQL语句字符串，可能会受到注入攻击-->        select * from user where username like '%${value}%'    </select>    <!--查询总用户数量-->    <select id="findTotal" resultType="Integer">        select count(id) from user;    </select>    <!--mybatis支持ognl(Object graphic navigation language 对象图导航语言)表达式-->    <!--parameterType中提供了对象的类型，我们可以通过#{}直接获取其中属性，比如这里的user-->    <!--又因为mybatis支持ognl，可以直接通过user.username获取username属性，而不是通过user.getUsername()方法来获取-->    <!--通过QueryVo模糊查询-->    <select id="findByQueryVo" resultMap="userMap" parameterType="com.kearmy.domain.QueryVo">        select * from user where username like #{user.userName};    </select>    <select id="findByCondition" resultMap="userMap" parameterType="user">        select * from user where 1=1        <if test="userName != null">            and username=#{userName}        </if>    </select></mapper>