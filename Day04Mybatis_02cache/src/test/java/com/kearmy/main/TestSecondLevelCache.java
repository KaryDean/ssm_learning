package com.kearmy.main;import com.kearmy.dao.IUserDao;import com.kearmy.domain.User;import org.apache.ibatis.io.Resources;import org.apache.ibatis.session.SqlSession;import org.apache.ibatis.session.SqlSessionFactory;import org.apache.ibatis.session.SqlSessionFactoryBuilder;import org.junit.After;import org.junit.Before;import org.junit.Test;import java.io.IOException;import java.io.InputStream;public class TestSecondLevelCache {    /**     * 测试一级缓存     */    @Test    public void testSecondLevelCache() throws IOException {        InputStream is = Resources.getResourceAsStream("SqlMapConfig.xml");        SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(is);        SqlSession sqlSession1 = sqlSessionFactory.openSession();        IUserDao iUserDao1 = sqlSession1.getMapper(IUserDao.class);        User user1 = iUserDao1.findById(42);        System.out.println(user1);        sqlSession1.close();        SqlSession sqlSession2 = sqlSessionFactory.openSession();        IUserDao iUserDao2 = sqlSession2.getMapper(IUserDao.class);        User user2 = iUserDao2.findById(42);        System.out.println(user2);        sqlSession2.close();        System.out.println(user1==user2);        is.close();    }    /**     * 2020-06-29 16:51:09,722 721    [           main] DEBUG m.kearmy.dao.IUserDao.findById  - ==>  Preparing: select * from user where id=?     * 2020-06-29 16:51:09,755 754    [           main] DEBUG m.kearmy.dao.IUserDao.findById  - ==> Parameters: 42(Integer)     * 2020-06-29 16:51:09,810 809    [           main] DEBUG m.kearmy.dao.IUserDao.findById  - <==      Total: 1     * com.kearmy.domain.User@3972a855     * 2020-06-29 16:51:09,822 821    [           main] DEBUG ansaction.jdbc.JdbcTransaction  - Resetting autocommit to true on JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6a2b953e]     * 2020-06-29 16:51:09,822 821    [           main] DEBUG ansaction.jdbc.JdbcTransaction  - Closing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6a2b953e]     * 2020-06-29 16:51:09,823 822    [           main] DEBUG source.pooled.PooledDataSource  - Returned connection 1781241150 to pool.     * 2020-06-29 16:51:09,827 826    [           main] DEBUG        com.kearmy.dao.IUserDao  - Cache Hit Ratio [com.kearmy.dao.IUserDao]: 0.5     * com.kearmy.domain.User@62230c58     * false     *     * 查询打印语句中，我们可以看到，第二次查询时，并没有重复查询，说明有二级缓存     *     * 为什么最后的结果是false呢？     * 因为SqlSessionFactory缓存中并不存储对象，而是存放数据，当有新的查询查询时，会创建新的对象，并将数据放入其中，因此对象是不同的     * 所以最终的结果为false     */}